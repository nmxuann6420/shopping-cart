[{"D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\index.js":"1","D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\reportWebVitals.js":"2","D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\App.js":"3","D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\components\\Header.js":"4","D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\components\\Bill.js":"5","D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\components\\Basket.js":"6","D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\components\\Product.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":3159,"mtime":1610936919455,"results":"11","hashOfConfig":"9"},{"size":648,"mtime":1610895594930,"results":"12","hashOfConfig":"9"},{"size":3227,"mtime":1610899052073,"results":"13","hashOfConfig":"9"},{"size":742,"mtime":1610936833966,"results":"14","hashOfConfig":"9"},{"size":793,"mtime":1610936503275,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"uwqr78",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\index.js",[],["33","34"],"D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\reportWebVitals.js",[],"D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\App.js",[],"D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\components\\Header.js",["35"],"import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let { products } = this.props;\r\n        let totalInCart = 0;\r\n        for (let i = 0; i < products.length; i++) {\r\n            totalInCart += products[i].inCart;\r\n        }\r\n        \r\n        return (\r\n            <div className=\"header\">\r\n                <h1 className=\"title\">Small Shopping Cart</h1>\r\n                <p>\r\n                    Cart <span className=\"in-cart\">{totalInCart}</span>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\components\\Bill.js",["36"],"import React, { Component } from 'react';\r\n\r\n\r\nclass Bill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeAmountItems = this.changeAmountItems.bind(this);\r\n    }\r\n\r\n    changeAmountItems(e, id, inCart) {\r\n        if (e.target.classList.contains('btn-plus')) {\r\n            (inCart < 30) ? inCart++ : (inCart = 30);\r\n        } else {\r\n            inCart--;\r\n        }\r\n        this.props.changeAmountItems(id, inCart);\r\n    }\r\n\r\n    render() {\r\n        let { products } = this.props;\r\n        let a = '', flag = false;\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (products[i].inCart !== 0) {\r\n                flag = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (flag) {\r\n            let shippingPrice = 50, taxPrice = 0, total = 0, itemPrice = 0;\r\n            let productItems = products.map(product => {\r\n                if (product.inCart !== 0) {\r\n                    (product.inCart > 1) ? (shippingPrice = 0) : (shippingPrice = 50);\r\n                    taxPrice += (product.inCart * 140);\r\n                    itemPrice += (product.inCart * product.price);\r\n                    total += (product.inCart * product.price) + taxPrice;\r\n                    return (\r\n                        <li className=\"product-item\">\r\n                            <p className=\"product-name\">{product.productName}</p>\r\n                            <div>\r\n                                <button className=\"btn btn-plus\" onClick={(e) => this.changeAmountItems(e, product.id, product.inCart)}>+</button>\r\n                                <button className=\"btn btn-minus\" onClick={(e) => this.changeAmountItems(e, product.id, product.inCart)}>-</button>\r\n                            </div>\r\n                            <span className=\"number\">\r\n                                {product.inCart} x <span className=\"price\">${product.price}.00</span>\r\n                            </span>\r\n                        </li>\r\n                    )\r\n                }\r\n                \r\n            })\r\n            a = (\r\n                <div>\r\n                    <ul className=\"list-items\">\r\n                        { productItems }\r\n                    </ul>\r\n                    <div className=\"total-bill\">\r\n                        <div>\r\n                            <p>Items price</p>\r\n                            <p>Tax price</p>\r\n                            <p>Shipping price</p>\r\n                            <p>Total price</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>${itemPrice}.00</p> \r\n                            <p>${taxPrice}.00</p>\r\n                            <p>${shippingPrice}.00</p>\r\n                            <p>${total}.00</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            a = <p className=\"empty\">Cart is empty</p>\r\n        }\r\n\r\n        return (\r\n            <div className=\"bill\">\r\n                <p className=\"text\">Cart items</p>\r\n                <div className=\"order-items\">\r\n                    { a }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Bill;\r\n","D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\components\\Basket.js",[],"D:\\Frontend\\Reactjs\\learn-reactjs\\shopping-cart\\src\\components\\Product.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":4,"column":5,"nodeType":"43","messageId":"44","endLine":6,"endColumn":6},{"ruleId":"45","severity":1,"message":"46","line":31,"column":53,"nodeType":"47","messageId":"48","endLine":31,"endColumn":55},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]